{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to our WebDevelopment Course","text":"<p>Warning</p> <ul> <li>Diese Webseite dient als Referenz f\u00fcr den Stoff im Unterricht. </li> <li>Sie kann jederzeit ver\u00e4ndert, angepasst und erweitert werden.</li> <li> <p>Es werden jedoch nicht alle Inhalte hier dokumentiert. </p> </li> <li> <p> Es wird erwartet das sie eigenen Notizen anlegen. </p> </li> <li> Sie d\u00fcrfen gerne zu dieser Webseite beitragen. ( Pull Request)</li> </ul>"},{"location":"#themen","title":"Themen","text":"<ul> <li> <p>  Material for MKDocs</p> <p>A static Site Generator</p> </li> <li> <p> Inhalt und Struktur</p> </li> <li> <p>  Design</p> </li> <li> <p>  Interaktivit\u00e4t</p> </li> </ul>"},{"location":"#faq","title":"FAQ","text":"Wie sehen Leistungsnachweise aus? <p> Keine Ahnung. - Infos folgen.</p>"},{"location":"mkdocs/","title":"Material for MkDocs","text":"<p>Was ist MkDocs?</p> <p>Eine einfache M\u00f6glichkeit um eine sch\u00f6ne Dokumentationsseite f\u00fcr ihr Projekt zu erstellen. Der Inhalt wird in Markdown-Dateien verfasst und dann zu einer statischen Webseite umgewandelt. </p> <p> Offizielle Webseite</p> Full Video Tutorial - by James Willett","tags":["MarkDown","YAML"]},{"location":"mkdocs/#eine-neue-seite-anlegen","title":"Eine neue Seite anlegen.","text":"<p>Sie k\u00f6nnen der Anleitung auf der offiziellen Webseite folgen und <code>mkdocs</code> global installieren oder das Tool <code>uv</code> nutzen. </p> <p>Schritte mit dem Tool <code>uv</code></p> <ol> <li>Neues Projekt anlegen: <code>uvx --with mkdocs-material mkdocs new my-big-project</code></li> <li>Vorschau \u00f6ffnen: <code>uvx --with mkdocs-material mkdocs serve --open</code></li> </ol> <ul> <li> </li> <li> </li> </ul>","tags":["MarkDown","YAML"]},{"location":"mkdocs/#commands","title":"Commands","text":"<p>Eine kleine \u00dcbersicht der wichtigsten Befehle.</p> <ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>","tags":["MarkDown","YAML"]},{"location":"mkdocs/#project-layout","title":"Project layout","text":"<p>Nach dem erstellen eines neuen Projekts sollten Sie folgende Verzeichnisstruktur vorfinden.</p> <pre><code>mkdocs.yml      # The mkdocs configuration file.\ndocs/\n    index.md    # The documentation homepage.\n    ...         # Other markdown pages, images and other files.\n</code></pre>","tags":["MarkDown","YAML"]},{"location":"mkdocs/#yaml-das-config-format-fur-mkdocs","title":"YAML \u2013 Das Config-Format f\u00fcr MkDocs","text":"<p>Wof\u00fcr? MkDocs liest seine Einstellungen aus <code>mkdocs.yml</code> (oder <code>mkdocs.yaml</code>).</p> <p>Wichtigste Grundlagen</p> <ul> <li>Struktur: Einr\u00fcckung mit 2 Leerzeichen, keine Tabs.</li> <li>Key\u2013Value: <code>key: value</code></li> <li>Listen:</li> </ul> <p><pre><code>nav:\n    - Home: index.md\n    - \u00dcber: about.md\n</code></pre> * Kommentare: <code># Dies ist ein Kommentar</code> * Datentypen: Strings, Zahlen, Bool (<code>true</code>/<code>false</code>), Listen, verschachtelte Maps.</p> Typische MkDocs-Keys <pre><code>site_name: Meine Doku\ntheme:\nname: material\n</code></pre> <p>Mehr Infos</p> <ul> <li>YAML-Tutorial (engl.)</li> <li>MkDocs-Konfig</li> </ul>","tags":["MarkDown","YAML"]},{"location":"mkdocs/#markdown-inhalte-der-doku","title":"Markdown \u2013 Inhalte der Doku","text":"<p>Wof\u00fcr? Alle Seiten liegen als <code>.md</code>-Dateien vor.</p> <p>Basis-Syntax</p> <ul> <li>\u00dcberschriften: <code># H1</code>, <code>## H2</code>, <code>### H3</code></li> <li>Textformat: <code>**fett**</code>, <code>*kursiv*</code>, <code>`Code`</code></li> <li> <p>Listen:</p> <ul> <li>Ungeordnet: <code>- Item</code></li> <li>Geordnet: <code>1. Item</code></li> </ul> </li> <li> <p>Links/Bilder:</p> <ul> <li><code>[Titel](https://example.com)</code></li> <li><code>![Alt-Text](bild.png)</code></li> </ul> </li> <li> <p>Codebl\u00f6cke:     <pre><code>```python\nprint(\"Hallo Welt\")\n```\n</code></pre></p> </li> </ul> Praktische Erweiterungen (je nach Theme) <ul> <li>Tabellen:</li> </ul> <pre><code>| Spalte1 | Spalte2 |\n|---------|---------|\n| A       | B       |\n</code></pre> <ul> <li>Hinweisboxen (Material for MkDocs):</li> </ul> <pre><code>!!! note\n    Dies ist ein Hinweis.\n</code></pre> <p>Mehr Infos</p> <ul> <li>Markdown-Guide (de)</li> <li>MkDocs mit Markdown</li> </ul>","tags":["MarkDown","YAML"]},{"location":"mkdocs/#veroffentlichen","title":"Ver\u00f6ffentlichen","text":"<p>Um die Website nun zu ver\u00f6ffentlichen k\u00f6nnen wir z.B  github-pages verwenden.</p> <p>Legen Sie dazu die Datei <code>.github/workflows/ci.yml</code> in ihrem Projektordner an und f\u00fcgen Sie den Inhalt wie im offiziellen  Tutorial beschrieben dort ein.</p> <p>Stellen Sie sicher das in ihrem Github Repo unter Settings  Pages die Einstellung Deploy from a branch ausgew\u00e4hlt haben. Als Branch sollte <code>gh-pages</code> und <code>/(root)</code> eingestellt sein.</p> <p>Tip</p> <p>Siehe Video bei Minute  22:20 </p>","tags":["MarkDown","YAML"]},{"location":"mkdocs/#alternativen","title":"Alternativen","text":"<p> Docusaurus</p> <p> Astro Starlight</p> <p> mdbook</p> <p>... viele weitere</p>","tags":["MarkDown","YAML"]},{"location":"mkdocs/#aufgabe","title":"Aufgabe","text":"<p>Dokumentation Abschlussprojekt</p> <ul> <li>Erstellen Sie mit MKDocs eine Webseite f\u00fcr die Dokumentation ihres Abschlussprojektes.</li> <li>W\u00e4hlen Sie ein Farbschema f\u00fcr ihre Doku.</li> <li>F\u00fcgen Sie den Inhalt ihres Projektsteckbriefs hinzu.</li> <li>Erstellen Sie ein neues repository auf  github.</li> <li>Ver\u00f6ffentlichen Sie den Webseite mit github pages.</li> <li>Teilen Sie den Link zu ihrer Doku in Teams.</li> </ul>","tags":["MarkDown","YAML"]},{"location":"resources/","title":"Resources","text":"<p>Auf dieser Seite finden Sie  Links zu anderen Kursen und Materialien \u00fcber die behandelten Themen.</p>","tags":["HTML5","CSS3","JavaScript"]},{"location":"resources/#mkdocs","title":"MKDocs","text":"<ul> <li>MkDocs (Original Project)</li> <li> <p>Material for MKDocs</p> </li> <li> <p>MkDocs-Konfig</p> </li> </ul>","tags":["HTML5","CSS3","JavaScript"]},{"location":"resources/#yaml","title":"YAML","text":"<ul> <li>YAML-Tutorial (engl.)</li> </ul>","tags":["HTML5","CSS3","JavaScript"]},{"location":"resources/#markdown","title":"Markdown","text":"<ul> <li>Markdown Guide</li> </ul>","tags":["HTML5","CSS3","JavaScript"]},{"location":"resources/#html","title":"HTML","text":"<ul> <li>Web.dev - Learn HTML</li> <li>W3Schools HTML Tutorial</li> <li>Programiz HTML Tutorial</li> </ul>","tags":["HTML5","CSS3","JavaScript"]},{"location":"resources/#css","title":"CSS","text":"<ul> <li>Web.dev - Learn CSS</li> <li>Programiz CSS Tutorial</li> </ul>","tags":["HTML5","CSS3","JavaScript"]},{"location":"resources/#javascript","title":"JavaScript","text":"<ul> <li>Web.dev - Learn JS</li> <li>Programiz JS Tutorial</li> </ul>","tags":["HTML5","CSS3","JavaScript"]},{"location":"vscode-setup/","title":"VSCode f\u00fcr WebDevelopment einrichten","text":"<p>Das meiste was wir ben\u00f6tigen liefert VSCode bereits standardm\u00e4\u00dfig mit.</p> <p>Eigentlich k\u00f6nnen wir direkt eine Datei mit der Endung <code>.html</code> anlegen und diese einfach im Webbrowser userer Wahl \u00f6ffnen. </p> <p>Aber um uns das Leben etwas einfacher zu machen installieren wir zwei Erweiterungen.</p> <p>Task</p> <ul> <li>Extension <code>Live Preview</code> von Microsoft installieren.</li> <li>Extension <code>Prettier - Code formatter</code> von Prettier installieren.</li> </ul>"},{"location":"web/","title":"How the Web Works","text":"<p>Bevor wir mit der Entwicklung von Webseiten starten, schauen wir uns zun\u00e4chst einige grundlegende Begriffe und Konzepte an.</p>"},{"location":"web/#client-server-modell","title":"Client-Server Modell","text":"<ul> <li> <p> Webbrowser</p> <ul> <li> Firefox</li> <li> Chrome</li> <li> Safari</li> <li>...</li> </ul> </li> <li> <p> Webserver</p> <ul> <li> Apache</li> <li> NGINX</li> <li> Caddy</li> <li>...</li> </ul> </li> </ul>"},{"location":"web/#url-unified-resource-locator","title":"URL (Unified Resource Locator)","text":"<p>A URL is the full web address used to find a specific resource, like a web page or file, on the internet.</p> <p>Example</p> <p>https://www.nuernberg.de/internet/rudolf_diesel_fachschule/</p> <p> Die URL besteht aus 3 Teilen:</p> <ul> <li>Protokoll: <code>https</code></li> <li>Domain: <code>nuernberg.de</code></li> <li>Pfad: <code>internet/rudolf_diesel_fachschule</code></li> </ul>"},{"location":"web/#dns-domain-name-system","title":"DNS (Domain Name System)","text":"<p>Wenn du eine URL in den Browser eingibst, wird der Domainname (z.B. nuernberg.de) \u00fcber das Domain Name System in eine IP-Adresse \u00fcbersetzt(1). Dank DNS wei\u00df dein Computer also, welchen Server er ansprechen muss, um die Inhalte der gew\u00fcnschten Website zu laden.</p> <ol> <li> Vereinfacht funktioniert das DNS wie ein Telefonbuch.</li> </ol>"},{"location":"web/#http-hypertext-transfer-protocol","title":"HTTP (HyperText Transfer Protocol)","text":"<ul> <li>Spezifikation f\u00fcr die Kommunikation zwischen Client (1) und Server (2). </li> <li>Stateless<sup>1</sup>: Jeder Request ist unabh\u00e4ngig vom vorherigen.</li> <li>Jeder Response enth\u00e4lt einen Status Code: z.B. 200 OK 404 Not found</li> <li>Es gibt verschiedene Typen von Requests (GET, POST, PUT, DELETE)</li> <li><code>S</code> in <code>HTTPS</code>steht f\u00fcr Secure. Also verschl\u00fcsselt.</li> </ul> <ol> <li> <p>Auf Deutsch: Zustandslos\u00a0\u21a9</p> </li> </ol>"},{"location":"html/basics/","title":"HTML Basics","text":"","tags":["HTML5"]},{"location":"html/basics/#was-ist-html","title":"Was ist HTML?","text":"<p>HTML (HyperText Markup Language) ist eine Auszeichnungssprache, mit der der Aufbau einer Webseite beschrieben wird. Mit sogenannten Tags werden Elemente wie \u00dcberschriften, Abs\u00e4tze oder Links festgelegt.</p> <p>HyperText bedeutet, dass Texte \u00fcber Verkn\u00fcpfungen (Links) miteinander verbunden sind und man so von einem Dokument zum n\u00e4chsten springen kann.</p> <p>Eine Auszeichnungssprache (Markup Language) ist eine Computersprache, die verwendet wird, um einem Textdokument Struktur und Formatierung hinzuzuf\u00fcgen.</p>","tags":["HTML5"]},{"location":"html/basics/#ein-einfaches-beispiel","title":"Ein einfaches Beispiel","text":"Ein sehr einfaches HTML Document<pre><code>&lt;!DOCTYPE html&gt; (1)\n&lt;html&gt; (2)\n\n  &lt;head&gt; (3)\n    &lt;title&gt;RDF - Rudolf Diesel Fachschule&lt;/title&gt; (4)\n  &lt;/head&gt;\n\n  &lt;body&gt; (5)\n    &lt;h1&gt;RDF&lt;/h1&gt; (6)\n    &lt;p&gt;Die Rudolf Diesel Fachschule ist eine Technikerschule.&lt;/p&gt; (7)\n  &lt;/body&gt;\n\n&lt;/html&gt; \n</code></pre> <ol> <li> <code>&lt;!DOCTYPE html&gt;</code> - Definiert, dass es sich hier um ein HTML5 Dokument handelt.  Es muss immer in der ersten Zeile stehen. </li> <li><code>&lt;html&gt;</code> ist das Wurzelelement, welches alle anderen umschlie\u00dft. Am Ende des Dokuments wird dies mit <code>&lt;/html&gt;</code> wieder geschlossen. Das <code>&lt;html&gt;</code> Tag sollte immer ein <code>lang</code>-Attribute benutzen um die Hauptsprache des Dokuments zu definieren.</li> <li>Der Abschnitt <code>&lt;head&gt;&lt;/head&gt;</code> umfasst Metadaten die nicht direkt sichtbar sind.</li> <li> <code>&lt;title&gt;</code>- Ist der Name, welcher im Tab des Browsers angezeigt wird.</li> <li>Der Abschnitt <code>&lt;body&gt;&lt;/body&gt;</code> definiert den Inhalt der Seite und ist Container f\u00fcr alle sichtbaren Elemente.</li> <li><code>&lt;h1&gt;</code> - Definiert eine \u00dcberschrift. Es gibt <code>&lt;h1&gt;</code> bis <code>&lt;h6&gt;</code>.</li> <li><code>&lt;p&gt;</code> - Definiert einen Absatz im Dokument.</li> </ol> <p>Ausgabe im Browser</p>","tags":["HTML5"]},{"location":"html/basics/#wie-funktioniert-html","title":"Wie funktioniert HTML?","text":"<p>HTML definiert die Struktur und den Inhalt einer Webseite mithilfe einer Reihe von Tags wie <code>&lt;h1&gt;</code>, <code>&lt;p&gt;</code> usw. Jedes Tag hat eine bestimmte Bedeutung und kann verwendet werden, um den Zweck des darin enthaltenen Inhalts zu definieren.</p> <p>Ein HTML-Element besteht in der Regel aus einem Start-Tag, dem eigentlichen Inhalt und einem End-Tag. Zum Beispiel:</p> <p><pre><code>&lt;p&gt; (1)\n    Dies ist ein Absatz. (2)\n&lt;/p&gt; (3)\n</code></pre> Hinweis: Es kann auch alles in einer Zeile stehen wie im obigen Beispiel.</p> <ol> <li><code>&lt;p&gt;</code> ist das Start-Tag. </li> <li><code>Dies ist ein Absatz</code> ist der Inhalt.</li> <li><code>&lt;/p&gt;</code> ist das End-Tag.</li> </ol> <p>HTML-Elemente k\u00f6nnen ineinander geschachtelt werden und bilden dadurch eine hierarchische Struktur. Diese Struktur wird als Document Object Model (DOM) bezeichnet und stellt die Webseite wie einen Baum<sup>1</sup> dar.</p> <p>Darstellung eines DOM</p> <p> Darstellung des DOM aus dem obigen Beispiel </p>","tags":["HTML5"]},{"location":"html/basics/#was-sind-html-attribute","title":"Was sind HTML-Attribute?","text":"<p>HTML-Elemente k\u00f6nnen Attribute haben, die zus\u00e4tzliche Informationen \u00fcber das Element liefern. Sie werden im Start-Tag des Elements angegeben und haben die Form von Name-Wert-Paaren (<code>name=\"value\"</code>). </p> <pre><code>&lt;a href=\"http://example.com\"&gt; Beispiel &lt;/a&gt;\n</code></pre> <p>Das <code>href</code> ist ein Attribut. Es liefert die Link-Informationen zum <code>&lt;a&gt;</code>-Tag. </p> <ul> <li><code>href</code> \u2013 der Name des Attributs</li> <li><code>https://www.programiz.com</code> \u2013 der Wert des Attributs</li> </ul> <p>Hinweis</p> <p>HTML-Attribute sind meist optional.</p>","tags":["HTML5"]},{"location":"html/basics/#html-syntax","title":"HTML Syntax","text":"<p>Tipps f\u00fcr sauberen HTML-Code</p> <ul> <li> <p>Sauber strukturieren: Achte darauf, dass alle Tags korrekt ge\u00f6ffnet und geschlossen werden.</p> </li> <li> <p>Jedes Element in einer eigenen Zeile: So ist der Code leichter zu lesen und zu verstehen.</p> </li> <li> <p>Hierarchie sichtbar machen: Schachtelte Elemente sollten jeweils um eine Ebene einger\u00fcckt werden, damit die Struktur klar erkennbar ist.</p> </li> <li> <p>Lesbarkeit f\u00f6rdern: Klarer, ordentlich formatierter Code hilft, Fehler zu vermeiden und die Wartung zu erleichtern.</p> </li> </ul>","tags":["HTML5"]},{"location":"html/basics/#grundgerust","title":"Grundger\u00fcst","text":"Ein minimales Grundger\u00fcst<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"de\"&gt; (3)\n\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt; (1)\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt; (2)\n    &lt;title&gt;aussagekr\u00e4ftiger Seitentitel&lt;/title&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;!-- Sichtbarer Inhalt! --&gt;\n  &lt;/body&gt;\n\n&lt;/html&gt; \n</code></pre> <ol> <li>Zeichenkodierung damit alle Inhalte richtig dargestellt werden k\u00f6nnen. z.B. Emojis. \ud83d\ude00. Innerhalb der ersten 1024 Bytes n\u00f6tig. Gleiches Dateiformat speichern.</li> <li>Einstellungen um Darstellung auf mobilen Ger\u00e4ten zu verbessern.</li> <li>Default Language der Webseite.</li> </ol> <p>Quelle: selfhtml (angepasst)</p>","tags":["HTML5"]},{"location":"html/basics/#teamwork-the-web-design-tripple","title":"Teamwork - The Web Design Tripple","text":"<p>An dieser Stelle soll nur ein kurzes Beispiel f\u00fcr das Zusammenspiel von HTML, CSS und JS aufgezeigt werden. Dies wird dann erst in den Kapiteln CSS und JS weiter vertieft.</p> How do HTML, CSS and JS work?<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;My Webpage&lt;/title&gt; \n        (1)&lt;style&gt; \n          body {\n            text-align: center;\n          }\n          h1 {\n            color: #333;\n          }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Hello, World!&lt;/h1&gt;\n        &lt;p&gt;This is a simple HTML, CSS, and JavaScript webpage.&lt;/p&gt;\n        &lt;button onclick=\"displayAlert()\"&gt;Click me!&lt;/button&gt;\n        (2)&lt;script&gt;\n          function displayAlert() {\n        alert('Hello World!');\n          }\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li>Mit dem <code>&lt;script&gt;</code>-Tag kann CSS direkt in die HTML Seite eingebunden werden. Diese werden in der Regel innerhalb des <code>&lt;head&gt;</code> definiert und normalerweise in eine eigene Datei ausgelagert.</li> <li>Der <code>&lt;script&gt;</code>-Tag erm\u00f6glicht das einbinden von JavaScript um der Webseite interaktivit\u00e4t hinzuzuf\u00fcgen.</li> </ol> <p>Quelle: Programiz </p> <ol> <li> <p>Die Wurzel des Baums wird oft oben gezeichnet und die \u00c4ste verlaufen nach unten.\u00a0\u21a9</p> </li> </ol>","tags":["HTML5"]},{"location":"html/elements/","title":"Semantisches HTML","text":"","tags":["HTML5"]},{"location":"html/elements/#html-elemente","title":"HTML Elemente","text":"<p>Es gibt eine Vielzahl von HTML-Elementen. Nicht alle werden immer ben\u00f6tigt.</p> <p>MDN - HTML Elemte Referenz</p> <p>Einige wie <code>&lt;h1&gt;</code> und <code>&lt;p&gt;</code>, <code>&lt;a&gt;</code> haben wir schon kennengelernt. Hier zwei weitere Beispiele:</p> <ul> <li><code>&lt;div&gt;&lt;/div&gt;</code> - Container Element (Wie eine Box) - Wird oft f\u00fcr Layouts verwendet.</li> <li><code>&lt;span&gt;&lt;/span&gt;</code> - Inline-Container f\u00fcr Textinhalte. - Verwendung f\u00fcr Styling.</li> </ul>","tags":["HTML5"]},{"location":"html/elements/#block-vs-inline","title":"Block vs Inline","text":"<p>HTML Elemente k\u00f6nnen grob in zwei Gruppen eingeteilt werden.</p> <ul> <li>Inline Elements: <code>&lt;span&gt;</code>, <code>&lt;a&gt;</code>, <code>&lt;strong&gt;</code>, <code>&lt;img&gt;</code> etc.</li> <li>Block Elements: <code>&lt;p&gt;</code>, <code>&lt;div&gt;</code>, <code>&lt;h1&gt;</code>, <code>&lt;figure&gt;</code> etc.</li> </ul>","tags":["HTML5"]},{"location":"html/elements/#beispiel","title":"Beispiel","text":"<p>Schauen wir uns folgendes Beispiel an:</p> <p>Example</p> <pre><code>&lt;div&gt;\n&lt;span&gt;Three words&lt;/span&gt;\n&lt;div&gt;\n    &lt;a&gt;one word&lt;/a&gt;\n    &lt;a&gt;one word&lt;/a&gt;\n    &lt;a&gt;one word&lt;/a&gt;\n    &lt;a&gt;one word&lt;/a&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;div&gt;\n    &lt;div&gt;five words&lt;/div&gt;\n&lt;/div&gt;\n&lt;div&gt;\n    &lt;div&gt;three words&lt;/div&gt;\n    &lt;div&gt;forty-six words&lt;/div&gt;\n    &lt;div&gt;forty-four words&lt;/div&gt;\n&lt;/div&gt;\n&lt;div&gt;\n    &lt;div&gt;seven words&lt;/div&gt;\n    &lt;div&gt;sixty-eight words&lt;/div&gt;\n    &lt;div&gt;forty-four words&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div&gt;\n&lt;span&gt;five words&lt;/span&gt;\n&lt;/div&gt;\n</code></pre> <p>Question</p> <p>Welche Struktur k\u00f6nnen Sie in der Webseite erkennen?</p>","tags":["HTML5"]},{"location":"html/elements/#semantisches-vs-nicht-semantisches-html","title":"Semantisches vs nicht-semantisches HTML","text":"<p>Im obigen Beispiel ist der Kontext nicht sehr einfach zu erkennen. Lassen Sie uns die gleiche Webseite mit semantischen Elementen neu schreiben.</p> Semantische Version<pre><code>&lt;header&gt;\n  &lt;h1&gt;Three words&lt;/h1&gt;\n  &lt;nav&gt;\n    &lt;a&gt;one word&lt;/a&gt;\n    &lt;a&gt;one word&lt;/a&gt;\n    &lt;a&gt;one word&lt;/a&gt;\n    &lt;a&gt;one word&lt;/a&gt;\n  &lt;/nav&gt;\n&lt;/header&gt;\n&lt;main&gt;\n  &lt;header&gt;\n    &lt;h2&gt;five words&lt;/h2&gt;\n  &lt;/header&gt;\n  &lt;section&gt;\n    &lt;h2&gt;three words&lt;/h2&gt;\n    &lt;p&gt;forty-six words&lt;/p&gt;\n    &lt;p&gt;forty-four words&lt;/p&gt;\n  &lt;/section&gt;\n  &lt;section&gt;\n    &lt;h3&gt;seven words&lt;/h3&gt;\n    &lt;p&gt;sixty-eight words&lt;/p&gt;\n    &lt;p&gt;forty-four words&lt;/p&gt;\n  &lt;/section&gt;\n&lt;/main&gt;\n&lt;footer&gt;\n  &lt;p&gt;five words&lt;/p&gt;\n&lt;/footer&gt;\n</code></pre> <p>Wichtig</p> <p>Verwenden Sie f\u00fcr eine besser Lesbarkeit und Struktur m\u00f6glichst immer semantische HTML Tags wie <code>&lt;header&gt;</code>, <code>&lt;main&gt;</code>, <code>&lt;footer&gt;</code>, <code>&lt;nav&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code> wenn sinnvoll. Dies ist auch f\u00fcr Screenreader und das Ranking in der Suchmaschine relevant.</p> <p>HTML-Tags lassen sich grob in semantische und nicht-semantische Elemente unterteilen. Semantische Tags geben dem Inhalt eine klare Bedeutung und Struktur (z.\u202fB. <code>&lt;header&gt;</code>, <code>&lt;article&gt;</code>), w\u00e4hrend nicht-semantische Tags haupts\u00e4chlich f\u00fcr Layout und Styling verwendet werden (z.\u202fB. <code>&lt;div&gt;</code>, <code>&lt;span&gt;</code>).</p> <p>Hier sind zwei nicht vollst\u00e4ndige Listen mit typischer Zuordnung.</p>","tags":["HTML5"]},{"location":"html/elements/#semantic","title":"Semantic","text":"Semantisches Tag Beschreibung <code>&lt;p&gt;</code> Definiert einen Absatz in einem Dokument <code>&lt;header&gt;</code> Definiert den Kopfbereich eines Dokuments oder Abschnitts <code>&lt;footer&gt;</code> Definiert den Fu\u00dfbereich eines Dokuments oder Abschnitts <code>&lt;nav&gt;</code> Definiert einen Bereich der Seite, der Navigationslinks enth\u00e4lt <code>&lt;article&gt;</code> Eigenst\u00e4ndiger, in sich geschlossener Inhalt <code>&lt;aside&gt;</code> Inhalte, die neben dem Hauptinhalt stehen (z.\u202fB. Seitenleiste) <code>&lt;main&gt;</code> Hauptinhalt eines Dokuments <code>&lt;section&gt;</code> Definiert einen Abschnitt eines Dokuments <code>&lt;details&gt;</code> Zus\u00e4tzliche Details, die der Benutzer ein- oder ausblenden kann <code>&lt;summary&gt;</code> \u00dcberschrift f\u00fcr das <code>&lt;details&gt;</code>-Element <code>&lt;h1&gt;</code> \u2013 <code>&lt;h6&gt;</code> \u00dcberschriften in verschiedenen Hierarchieebenen <code>&lt;a&gt;</code> Definiert einen Hyperlink zu einer anderen Seite oder Ressource <code>&lt;img&gt;</code> F\u00fcgt ein Bild in das Dokument ein <code>&lt;figure&gt;</code> Bild oder Grafik mit optionaler Beschriftung <code>&lt;figcaption&gt;</code> Beschriftung f\u00fcr ein <code>&lt;figure&gt;</code>-Element <code>&lt;mark&gt;</code> Hervorgehobener Text <code>&lt;time&gt;</code> Datum oder Uhrzeit <code>&lt;address&gt;</code> Kontaktinformationen oder Autorenangaben <code>&lt;blockquote&gt;</code> L\u00e4ngerer Zitatabschnitt <code>&lt;q&gt;</code> Kurzes Zitat <code>&lt;code&gt;</code> Quellcode innerhalb des Textes <code>&lt;em&gt;</code> Betonter Text <code>&lt;strong&gt;</code> Wichtige Betonung des Textes","tags":["HTML5"]},{"location":"html/elements/#non-semantic","title":"Non-Semantic","text":"Nicht-Semantisches Tag Beschreibung <code>&lt;div&gt;</code> Allgemeiner Container ohne spezifische Bedeutung, oft f\u00fcr Layout oder Styling <code>&lt;span&gt;</code> Inline-Container ohne spezifische Bedeutung, z.\u202fB. f\u00fcr Styling oder Textauszeichnung <code>&lt;b&gt;</code> Fett formatierter Text ohne semantische Bedeutung <code>&lt;i&gt;</code> Kursiv formatierter Text ohne semantische Bedeutung <code>&lt;u&gt;</code> Unterstrichener Text ohne semantische Bedeutung <code>&lt;s&gt;</code> Durchgestrichener Text ohne semantische Bedeutung <code>&lt;small&gt;</code> Kleinerer Text ohne semantische Bedeutung <code>&lt;big&gt;</code> Gr\u00f6\u00dferer Text ohne semantische Bedeutung","tags":["HTML5"]},{"location":"html/elements/#aufgabe","title":"Aufgabe","text":"<p>Aufgabe</p> <p>Erstellen Sie eine HTML-Seite \u00fcber die Fortbildung als Wirtschaftsinformatiker an der RDF.</p> <p>Die Webseite soll einen klassischen Aufbau mit Titel, Inhalt, Fusszeile haben.</p> <ul> <li>Nutzen Sie semantisches HTML.</li> <li>F\u00fcgen Sie mindestens ein Bild ein.</li> <li>Nutzen Sie mindestens eine Aufz\u00e4hlungsliste.</li> <li>Nutzen Sie mindestens einmal <code>&lt;details&gt;</code> und <code>&lt;summary&gt;</code> um Inhalt auszublenden.</li> </ul>","tags":["HTML5"]},{"location":"html/forms/","title":"HTML Forms","text":"<p>Note</p> <p>comming soon</p>","tags":["HTML5"]}]}